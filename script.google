function doPost(e) {
  // Log dei dati ricevuti per debug
  Logger.log('Received POST data: ' + JSON.stringify(e.postData.contents));
  
  const data = JSON.parse(e.postData.contents);
  Logger.log('Parsed data: ' + JSON.stringify(data));
  
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  
  let response = {
    success: false,
    message: '',
    data: null
  };

  try {
    switch (data.action) {
      case 'moveEquipment':
        response = handleMoveEquipment(data.data, sheet);
        break;
      case 'addEquipment':
        response = handleAddEquipment(data.data, sheet);
        break;
      default:
        throw new Error('Azione non supportata: ' + data.action);
    }
  } catch (error) {
    response.message = error.toString();
  }

  return ContentService
    .createTextOutput(JSON.stringify(response))
    .setMimeType(ContentService.MimeType.JSON)
    .setHeader('Access-Control-Allow-Origin', '*');
}

function handleMoveEquipment(data, sheet) {
  Logger.log('handleMoveEquipment called with data: ' + JSON.stringify(data));
  
  const attrezzaturaSheet = sheet.getSheetByName('attrezzatura');
  const logSheet = sheet.getSheetByName('log');
  
  // Verifica che i fogli esistano
  if (!attrezzaturaSheet) {
    throw new Error('Foglio attrezzatura non trovato');
  }
  if (!logSheet) {
    throw new Error('Foglio log non trovato');
  }
  
  // Trova la riga dell'attrezzatura
  const values = attrezzaturaSheet.getDataRange().getValues();
  let row = -1;
  for (let i = 0; i < values.length; i++) {
    if (values[i][4] === data.codice) { // colonna E (indice 4) contiene il codice
      row = i + 1;
      break;
    }
  }
  
  if (row > 0) {
    // Aggiorna l'ubicazione
    attrezzaturaSheet.getRange(row, 4).setValue(data.newLocation); // colonna D (indice 4)
    
    // Determina se Ã¨ una nuova ubicazione
    const azione = data.isNewLocation ? 
      'Spostamento attrezzatura e inserimento nuova ubicazione' : 
      'Spostamento attrezzatura';
    
    // Aggiungi il log
    logSheet.appendRow([
      data.timestamp,
      data.userName,
      azione,
      'attrezzatura',
      data.codice,
      data.oldLocation,
      data.newLocation
    ]);

    return {
      success: true,
      message: 'Attrezzatura spostata con successo',
      data: null
    };
  }
  
  throw new Error('Attrezzatura non trovata');
}

function handleAddEquipment(data, sheet) {
  const attrezzaturaSheet = sheet.getSheetByName('attrezzatura');
  const logSheet = sheet.getSheetByName('log');
  
  // Validazione dati
  if (!data.categoria || !data.tipo || !data.marca || !data.ubicazione) {
    throw new Error('Tutti i campi obbligatori devono essere compilati');
  }
  
  // Genera nuovo codice
  const values = attrezzaturaSheet.getDataRange().getValues();
  const lastRow = values.length;
  const newCode = `ATTR${String(lastRow).padStart(4, '0')}`;
  
  // Inserisci nuova attrezzatura
  attrezzaturaSheet.appendRow([
    data.categoria,           // Categoria
    data.tipo,               // Tipo
    data.marca,              // Marca/Modello
    data.ubicazione,         // Ubicazione
    newCode,                 // Codice
    new Date(),              // Data inserimento
    data.note || ''          // Note (opzionale)
  ]);
  
  // Aggiungi il log nel formato richiesto
  logSheet.appendRow([
    new Date(),              // Timestamp
    data.userName || 'Sistema', // Utente
    'Inserimento attrezzatura', // Azione
    'attrezzatura',          // Tabella
    newCode,                 // Riga Modificata (codice)
    '//',                    // Valore precedente (// per nuovo inserimento)
    data.marca               // Nuovo valore (marca/modello)
  ]);
  
  return {
    success: true,
    message: 'Attrezzatura inserita con successo',
    data: { codice: newCode }
  };
}